seti 123 0 5                                                                            -> reg[5] = 123 
bani 5 456 5            -> reg[5] = 123 & 456                                           -> reg[5] = 72
eqri 5 72 5             -> if reg[5] == 72 { reg 5 = 1 } else { reg[5] = 0 }            -> reg[5] = 1                   -> together with next line skips instruction
addr 5 2 2              -> reg[2] = reg[5] + reg[2]                                     -> reg[2] = 5                   -> together with next line skips instruction
seti 0 0 2                                                                              -> reg[2] = 0                   -> returns to start of program (loops)
seti 0 3 5                                                                              -> reg[5] = 0                   
bori 5 65536 3          -> reg[3] = reg[5] | 65536                                      -> reg[3] = 65536                                   
seti 9010242 6 5                                                                        -> reg[5] = 9010242
bani 3 255 1            -> reg[1] = reg[3] & 255                                        -> reg[1] = 0
addr 5 1 5              -> reg[5] = reg[5] + reg[1]                                     -> reg[5] = 9010242
bani 5 16777215 5       -> reg[5] = reg[5] & 16777215                                   -> reg[5] = 9010242
muli 5 65899 5          -> reg[5] = reg[5] * 65899                                      -> reg[5] = 593765937558
bani 5 16777215 5       -> reg[5] = reg[5] & 16777215                                   -> reg[5] = 3486102
gtir 256 3 1            -> if 256 > reg[3] { reg[1] = 1 } else { reg[1] = 0 }           -> reg[1] = 0                   -> together with next line skips instruction
addr 1 2 2              -> reg[2] = reg[1] + reg[2]                                     -> reg[2] = 14                  -> together with next line skips instruction
addi 2 1 2              -> reg[2] = reg[2] + 1                                          -> reg[2] = 16                  -> together with next line skips instruction    (goto line 18)
seti 27 6 2                                                                             -> reg[2] = 27
seti 0 8 1                                                                              -> reg[1] = 0                                               
addi 1 1 4              -> reg[4] = reg[1] + 1                                          -> reg[4] = 1
muli 4 256 4            -> reg[4] = reg[4] * 256                                        -> reg[4] = 256
gtrr 4 3 4              -> if reg[4] > reg[3] { reg[4] = 1 } else { reg[4] = 0 }        -> reg[4] = 0 
addr 4 2 2              -> reg[2] = reg[4] + reg[2]                                     -> reg[2] = 21                  -> skip next instruction
addi 2 1 2              -> reg[2] = reg[2] + 1                                          -> reg[2] = 23                  -> skip next instruction
seti 25 5 2                                                                             -> reg[2] = 25
addi 1 1 1              -> reg[1] = reg[1] + 1                                          -> reg[1] = 1
seti 17 7 2                                                                             -> reg[2] = 17
setr 1 3 3              -> reg[3] = reg[1]                                              -> 
seti 7 2 2                                                                              -> reg[2] = 7
eqrr 5 0 1              -> if reg[5] == reg[0] { reg[1] = 1 } else { reg[1] = 0}                                        -> line to skip next instruction
addr 1 2 2              -> reg[2] = reg[1] + reg[2]                                     -> EXIT FROM PROGRAM
seti 5 2 2                                                                              -> reg[2] = 5